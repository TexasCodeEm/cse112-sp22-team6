# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: JSDoc - Generate Documentation
        uses: andstor/jsdoc-action@v1
        with:
          source_dir:  ./source/scripts
          recurse: true
          output_dir:  ./docs

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: npm install
      
      - name: Verify HTML
        run: npm run validate-html

      - name: Verify CSS
        run: npm run validate-css

      - name: Run linters
        run: npm run lint
     
      - name: Run Jest Tests
        run: npm run test
      
      - name: Bundle Javascript
        run: npm run bundle
      
      - name: Build for deployment
        run: npm run build

      - name: Create Coverage
        run: node ./node_modules/jest/bin/jest.js --coverage

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Node Server
        run: nohup npm run host &

      - name: Run Cypress Tests
        run: npm run cypress

      - name: Deploy JSDocs
        if: ${{ github.event.pull_request.head.repo.full_name == 'org/repo' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: php-app
          path: ./build
  deploy-production:
    if: (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'pomodoro-team6'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3B58C52C0F154D2E80ECA91BE12791F5 }}
          package: .
  deploy-staging: 
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging-1'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'pomodoro-team6'
          slot-name: 'staging-1'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DF09305223C24179A24FDEF3729F8117 }}
          package: .

